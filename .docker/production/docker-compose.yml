services:

  service-kafka:
    build:
      context: ../../
      dockerfile: .docker/production/Dockerfile
    env_file:
      - .env.${APP_ENV}
    environment:
      - MESSAGE_SYSTEM=kafka
      - BASE_PORT=54100
    networks:
      - network_shared
    ports:
      - "54100-54196:54100-54196"
    volumes:
      - logs_dc_kafka:/workspaces/app/logs
      - files_dc_kafka:/workspaces/app/files
    restart: always
    command: "npm start"
    # logging:
    #   driver: "gelf"
    #   options:
    #     gelf-address: "udp://logstash:5044"
    deploy:
      replicas: ${DEPLOY_REPLICAS}
      resources:
        limits:
          cpus: "2.0"
          memory: "2g"
        reservations:
          cpus: "0.5"
          memory: "1g"
      restart_policy:
        condition: on-failure

  service-rabbitmq:
    build:
      context: ../../
      dockerfile: .docker/production/Dockerfile
    env_file:
      - .env.${APP_ENV}
    environment:
      - MESSAGE_SYSTEM=rabbitmq
      - BASE_PORT=54200
    networks:
      - network_shared
    ports:
      - "54200-54296:54200-54296"
    volumes:
      - logs_dc_rabbitmq:/workspaces/app/logs
      - files_dc_rabbitmq:/workspaces/app/files
    restart: always
    command: "npm start"
    # logging:
    #   driver: "gelf"
    #   options:
    #     gelf-address: "udp://logstash:5044"
    deploy:
      replicas: ${DEPLOY_REPLICAS}
      resources:
        limits:
          cpus: "2.0"
          memory: "2g"
        reservations:
          cpus: "0.5"
          memory: "1g"
      restart_policy:
        condition: on-failure

  service-redis:
    build:
      context: ../../
      dockerfile: .docker/production/Dockerfile
    env_file:
      - .env.${APP_ENV}
    environment:
      - MESSAGE_SYSTEM=redis
      - BASE_PORT=54300
    networks:
      - network_shared
    ports:
      - "54300-54396:54300-54396"
    volumes:
      - logs_dc_redis:/workspaces/app/logs
      - files_dc_redis:/workspaces/app/files
    restart: always
    command: "npm start"
    # logging:
    #   driver: "gelf"
    #   options:
    #     gelf-address: "udp://logstash:5044"
    deploy:
      replicas: ${DEPLOY_REPLICAS}
      resources:
        limits:
          cpus: "1.0"
          memory: "1g"
        reservations:
          cpus: "0.5"
          memory: "1g"
      restart_policy:
        condition: on-failure

volumes:
  logs_dc_kafka:
  files_dc_kafka:
  logs_dc_rabbitmq:
  files_dc_rabbitmq:
  logs_dc_redis:
  files_dc_redis:


networks:
  network_shared:
    # docker network create network_shared
    external: true # Ensure this network exists or create it manually
